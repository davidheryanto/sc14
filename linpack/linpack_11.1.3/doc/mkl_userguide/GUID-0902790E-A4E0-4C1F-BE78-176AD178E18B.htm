<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Managing Multi-core Performance">
<meta name="DC.subject" content="affinity mask, multi-core performance, performance, multi-core">
<meta name="keywords" content="affinity mask, multi-core performance, performance, multi-core">
<meta name="DC.Relation" scheme="URI" content="GUID-01C4A8FA-8BEC-4847-B1D5-16E76E6A03F7.htm">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-0902790E-A4E0-4C1F-BE78-176AD178E18B">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Managing Multi-core Performance</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-0902790E-A4E0-4C1F-BE78-176AD178E18B">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; Math Kernel Library 11.1 Update 3 User's Guide</em></p>


 
  <h1 class="topictitle1">Managing Multi-core Performance</h1>
 
   
  <div id="GUID-86A7B103-FD28-4426-AEBB-F1DD8C3BBF8C"> 
	 <p id="GUID-12F1B4D7-EACF-404C-B26A-4421AECCC5D0"> 
		You can obtain best performance on systems with multi-core processors by requiring that 
		threads do not migrate from core to core. To do this, bind threads to the CPU cores by 
		setting an affinity mask to threads. Use one of the following options: 
	 </p>
 
	 <ul id="GUID-99A1FF35-F0E7-4F45-826E-BE8685E4B7F8"> 
		<li id="GUID-86AAD310-F120-4335-8922-CB55651480E8"> 
		  OpenMP facilities (recommended, if available), for example, the 
		   
			 <samp class="codeph" id="GUID-9563A606-2806-45B4-91EB-E9743528DC05">KMP_AFFINITY</samp> 
		   
		  environment variable using the Intel OpenMP library 
		</li>
 
		<li id="GUID-010CECB9-71DE-47AD-BEAB-410263903A58"> 
		  A system function, as explained below 
		</li>
 
	 </ul>
 
	 <p id="GUID-AA8E4E3F-D93E-41DA-810A-2E3AC3442CFE"> 
		Consider the following performance issue: 
	 </p>
 
	 <ul id="GUID-59ABFA2D-08BF-4AFB-AAAF-F64FC9C839F7"> 
		<li id="GUID-87104E11-3B18-4DCF-A4F7-45442DF82C69"> 
		  The system has two sockets with two cores each, for a total of four cores (CPUs) 
		</li>
 
		<li id="GUID-345327B8-72FE-47A0-A871-88B9551BB6AD"> 
		  The 
		  two-thread parallel application 
		  that calls the Intel MKL FFT 
		  happens to run faster than in four threads, but the performance in two threads 
		  is 
		  very 
		  unstable 
		</li>
 
	 </ul>
 
	 <p id="GUID-83C69C37-9DE4-45FE-9A8E-7A8B77CE1709"> 
		The following code example shows how to resolve this issue by setting an affinity mask by operating system means using the Intel compiler. The code calls the system function 
		<samp class="codeph" id="GUID-77610F69-B7D1-4FAD-8C27-B69164CACDFD"> 
		  sched_setaffinity 
		</samp> 
		to bind the threads to 
		the 
		cores 
		on different sockets. Then the Intel MKL 
		FFT function 
		is called: 
	 </p>
 
	 <pre>        
#define _GNU_SOURCE //for using the GNU CPU affinity
// (works with the appropriate kernel and glibc)
// Set affinity mask
#include &lt;sched.h&gt;
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;omp.h&gt;
int main(void) {
	int NCPUs = sysconf(_SC_NPROCESSORS_CONF);
	printf("Using thread affinity on %i NCPUs\n", NCPUs);
#pragma omp parallel default(shared)
	{
		cpu_set_t new_mask;
		cpu_set_t was_mask;
		int tid = omp_get_thread_num();
		
		CPU_ZERO(&amp;new_mask);
		
		// 2 packages x 2 cores/pkg x 1 threads/core (4 total cores)
		CPU_SET(tid==0 ? 0 : 2, &amp;new_mask);
		
		if (sched_getaffinity(0, sizeof(was_mask), &amp;was_mask) == -1) {
			printf("Error: sched_getaffinity(%d, sizeof(was_mask), &amp;was_mask)\n", tid);
		}
		if (sched_setaffinity(0, sizeof(new_mask), &amp;new_mask) == -1) {
			printf("Error: sched_setaffinity(%d, sizeof(new_mask), &amp;new_mask)\n", tid);
		}
		printf("tid=%d new_mask=%08X was_mask=%08X\n", tid,
						*(unsigned int*)(&amp;new_mask), *(unsigned int*)(&amp;was_mask));
	}
	// Call Intel MKL FFT function
	return 0;
}
&nbsp;
        </pre> 
	 <p id="GUID-A892910B-349D-42F0-A220-60AF64E4F13C"> 
		Compile the application with the Intel compiler using the following command: 
	 </p>
 
	 <pre>icc test_application.c -openmp&nbsp;</pre> 
	 <p id="GUID-B684A599-9CB4-4C0B-8D24-8D526A49A2E1">&nbsp; 
	 </p>
 
	 <p id="GUID-F04E7AA6-CCB3-4CB9-8B1F-8B3CC2BCFDDE"> 
		where 
		 
		  <span class="filepath" id="GUID-0984B607-DD41-42A8-B849-DEA1110603F5">test_application.c</span> 
		 
		is the filename for the application. 
	 </p>
 
	 <p id="GUID-CF6219C6-F855-406C-9F08-6B554E6BC47F"> 
		Build the application. Run it in 
		two 
		threads, for example, by using the environment 
		variable to set the number of threads: 
	 </p>
 
	 <pre>env OMP_NUM_THREADS=2 ./a.out</pre> 
	 <p id="GUID-6FAFFB1C-D156-43FB-8679-0B9D4FE2DCD7"> 
		See 
		the 
		<em id="GUID-77E1A3A4-09B5-48B1-83C5-2B30BA25D5EA">Linux Programmer's Manual</em> 
		(in man pages format) 
		for 
		particulars of the 
		 
		  <samp class="codeph" id="GUID-C7D6509D-936D-4FEC-A67F-C46A7E3978BD">sched_setaffinity</samp> 
		 
		function used in the above example. 
	 </p>
 
	 <p id="GUID-BF77E117-F611-4F2E-A0A1-7121C0C97469"> 
		</p>
 
	 <p> 
	 
<div class="tablenoborder"><a name="d20e18"><!-- --></a><table cellpadding="4" summary="" id="d20e18" frame="border" border="1" cellspacing="0" rules="all"> 
		  <thead align="left"> 
			 <tr> 
				<th class="cellrowborder" align="left" valign="top" width="100%" id="d976e316"> 
				  <p id="d20e29"><a name="d20e29"><!-- --></a>Optimization Notice 
				  </p>
 
				</th>
 
			 </tr>
</thead>
 
		  <tbody> 
			 <tr> 
				<td class="bgcolor(#f5f5f5)" bgcolor="#f5f5f5" valign="top" width="100%" headers="d976e316 "> 
				  <p>Intel's compilers may or may not optimize to the same degree for non-Intel microprocessors for optimizations that are not unique to Intel microprocessors. These optimizations include SSE2, SSE3, and SSSE3 instruction sets and other optimizations. Intel does not guarantee the availability, functionality, or effectiveness of any optimization on microprocessors not manufactured by Intel. Microprocessor-dependent optimizations in this product are intended for use with Intel microprocessors. Certain optimizations not specific to Intel microarchitecture are reserved for Intel microprocessors. Please refer to the applicable product User and Reference Guides for more information regarding the specific instruction sets covered by this notice. 
				  </p>
 
				  <p> Notice revision #20110804 
				  </p>
  

				  </td>
 
			 </tr>
 
		  </tbody>
 
		</table>
</div>
 
	 </p>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-01C4A8FA-8BEC-4847-B1D5-16E76E6A03F7.htm">Other Tips and Techniques to Improve Performance</a></div>
</div>
<div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
