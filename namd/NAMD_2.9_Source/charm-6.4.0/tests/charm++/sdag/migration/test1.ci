mainmodule test1 {
  readonly CProxy_Main mainProxy;
  readonly int nrows;
  readonly int ncols;

  mainchare Main {
    entry Main(CkArgMsg*);
    entry void end();
  };

  array [2D] Cell {
    entry Cell();
    entry void finished(int number);
    entry void process(void) {
      atomic "print test" {
        CkPrintf("Migrating from PE %d\n", CkMyPe());
	thisProxy.process2();
        this->migrateMe(0);
      }
    };
    entry void process2(void) {
      when finished[100] (int number)
        atomic {
          CkPrintf("(%d, %d): received finished message\n", thisIndex.x, thisIndex.y);
	  contribute(CkCallback(CkIndex_Main::end(), mainProxy));
	}
    };
  };
};
