/**
***  Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000 by
***  The Board of Trustees of the University of Illinois.
***  All rights reserved.
**/

module ComputeMgr {
  // message [packed] ComputeGlobalConfigMsg;
  message [packed] ComputeGlobalDataMsg;
  message [packed] ComputeGlobalResultsMsg;

  message [packed] ComputeDPMEDataMsg;
  message [packed] ComputeDPMEResultsMsg;

  message [packed] ComputeConsForceMsg;

  message ComputeEwaldMsg {
    float eik[];
  };

  message NonbondedCUDASlaveMsg;

  group ComputeMgr
  {
    entry ComputeMgr(void);
    entry void updateComputes2(CkQdMsg *);
    entry void updateComputes3(void);
    entry void splitComputes(void);
    entry void splitComputes2(CkQdMsg *);
    entry void updateLocalComputes(void);
    entry void updateLocalComputes2(CkQdMsg *);
    entry void updateLocalComputes3(void);
    entry void updateLocalComputes4(CkQdMsg *);
    entry void updateLocalComputes5(void);
    entry void doneUpdateLocalComputes(void);

    // entry void recvComputeGlobalConfig(ComputeGlobalConfigMsg *);
    entry void recvComputeGlobalData(ComputeGlobalDataMsg *);
    entry void recvComputeGlobalResults(ComputeGlobalResultsMsg *);

    entry void recvComputeDPMEData(ComputeDPMEDataMsg *);
    entry void recvComputeDPMEResults(ComputeDPMEResultsMsg *);

    entry void recvComputeConsForceMsg(ComputeConsForceMsg *);

    entry void recvComputeEwaldData(ComputeEwaldMsg *);
    entry void recvComputeEwaldResults(ComputeEwaldMsg *);

    entry void recvYieldDevice(int pe);
    entry void recvBuildCudaForceTable();
    entry void recvCreateNonbondedCUDASlave(NonbondedCUDASlaveMsg *);
    entry void recvNonbondedCUDASlaveReady(int, int, int);
  } ;
}

